<section class="row">
  <%= form_for @work, html: { multipart: true} do |f| %>
    <% if @work.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@work.errors.count, "error") %> prohibited this work from being saved:</h2>

        <ul>
        <% @work.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
    
    <div class="small-12 columns">
      <paper-material elevation="2" style="background: #fff; padding: 10px 20px;">
        <%= label_tag nil, 'Images and Files', class: 'required' %>
        <div id="upload-works" style="border: 1px dashed #ccc;" class="dropzone"></div>

        <% 
          if @work.new_record? && @work.errors.any? 
            previously_uploaded = Attachment.where(parent_type: 'temp', parent_id: @work.temp_image_token)
          elsif !@work.new_record?
            previously_uploaded = @work.attachments
          else
            previously_uploaded = nil
          end
        %>
        <% if previously_uploaded && previously_uploaded.count > 0 %>
          <div class="notice success">
            <%= pluralize(previously_uploaded.count, 'file') %> <%= previously_uploaded.count == 1 ? 'has' : 'have' %> already been uploaded. You do not need to re-upload <%= previously_uploaded.count == 1 ? 'this file' : 'these files' %>:
          </div>
          <div>
            <% previously_uploaded.each do |attachment| %>
              <% if attachment.file_content_type.include?('image') %>
                <%= image_tag attachment.file.url(:small) %>
              <% else %>
                <%= link_to attachment.file.url(), class: 'file-attachment medium' do %>
                  <%= file_icon(attachment.file_content_type) %><br>
                  <%= attachment.file_file_name %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </paper-material>
      <hr>
    </div>

    <div class="small-12 columns">
      <paper-material elevation="1" style="background: #fff; padding: 10px 20px;">
        <div class="field">
          <%= f.label :instructor_id, class: 'required' %>
          <%= 
            chosen_select(f, :instructor_id, options_from_collection_for_select(Instructor.all, 'id', 'name', @work.instructor_id), {include_blank: true}, 
              'data-no_results_text' => 'No instructors match',
              data: {
                placeholder: 'Select an instructor'
              }
            ) 
          %>
        </div>

        <div class="field">
          <%= f.label :course_id, class: 'required' %>
          <%= 
            chosen_select(f, :course_id, options_from_collection_for_select(Course.all, 'id', 'number_and_name', @work.course_id), {include_blank: true}, 
              'data-no_results_text' => 'No courses match',
              data: {
                placeholder: 'Select a course'
              }
            ) 
          %>
        </div>
        <div class="field">
          <%= f.label :project_id, class: 'required' %>
          <div id="projects-container">
            <% if @work.course %>
              <%= render partial: 'projects/select_field', locals: {f: f} %>
            <% else %>
              <%= text_field_tag_with_bar :project_id, nil, disabled: true, placeholder: 'Select a course first' %>
            <% end %>
          </div>
        </div>
        <div class="field" id="project-description-container">
          <%= text_area_tag_with_bar :project_description, @work.project.try(:description), label: 'Project Description', disabled: !@work.project, placeholder: "#{'Select or create a project first' if !@work.project}" %>
        </div>
        <div class="field">
          <%= f.label :term, class: 'required' %>
          <%=
            chosen_select(f, :term, grouped_options_for_select(build_terms(group_year: true), @work.term), {include_blank: true},
              'data-no_results_text' => 'No terms match',
              data: {
                placeholder: 'Select a term'
              }
            ) 
          %>
        </div>
      </paper-material>
      <hr>
    </div>

    <div class="small-12 columns">
      <paper-material elevation="1" style="background: #fff; padding: 10px 20px;">
        <div class="field">
          <%= f.label :student_ids, 'Students' %>
          <%= 
            chosen_select(f, :student_ids, options_from_collection_for_select(Student.all, 'id', 'name', @work.student_works.map(&:student_id)), {include_blank: true},
              multiple: true,
              'data-no_results_text' => 'No student found. Press enter/return to create new student named',
              data: {
                placeholder: 'Select one or more students',
                allow_new: true
              }
            )
          %>
        </div>
        <div class="field">
          <%= f.label :name, "Title of Student Work" %>
          <%= text_field_with_bar f, :name %>
        </div>

        <div class="field">
          <%= f.label :description, "Description of Student Work" %>
          <%= text_area_with_bar f, :description %>
        </div>
      </paper-material>
      <hr>
    </div>

    <div id="notice-container" class="small-12 columns">
      <div class="notice success hide">
        <span class="file-count">0</span> file<span class="plural hide">s</span> uploaded
      </div>
      <div class="notice uploading hide">
        You must wait until <span class="plural hide">all of</span> the file<span class="plural hide">s</span> finish uploading before continuing&hellip;
      </div>
    </div>

    <div class="small-12 columns">
      <%= f.hidden_field :temp_image_token %>
      <%= f.submit %>
      <%= link_to 'Cancel', works_path, class: 'cancel' %>
    </div>
  <% end %>
</section>


<script type="text/javascript">
var dropzoneFileCount = 0;
var dropzoneFileCompleted = 0;
var dropzoneFileSuccessCount = 0;

var submit_button = $('#new_work input[type="submit"]');
submit_button.data('defaultVal', submit_button.val());

var myDropzone = new Dropzone("div#upload-works", { 
  url: "<%= attachments_path(temp_image_token: @work.temp_image_token) %>",
  paramName: "attachment[file]",
  dictDefaultMessage: 'Drop <%= "additional" if !@work.new_record? %> files here or click to upload',
  init: function() {
    this.on("addedfile", function(file) { 
      dropzoneFileCount += 1;

      submit_button.val('Uploading file, please wait...')
      submit_button.attr('disabled', 'disabled');

      $('#notice-container .notice.uploading').show();

      if (dropzoneFileCount > 1) {
        $('#notice-container .plural').show();
      }
    });
    this.on('error', function(file) {
      $('#notice-container').append('<div class="notice error">There was an error while uploading <span class="filename">' + file.name + '</span></div>');
    }); 
    this.on("success", function(file) {
      dropzoneFileSuccessCount += 1;

      $('#notice-container .success').show();
      $('#notice-container .file-count').html(dropzoneFileSuccessCount);
    });
    this.on("complete", function(file) { 
      dropzoneFileCompleted += 1;

      if (dropzoneFileCompleted == dropzoneFileCount) {
        $('#notice-container .notice.uploading').hide();
        submit_button.val(submit_button.data('defaultVal'));
        submit_button.removeAttr('disabled');
      }
    });
  }
});


$(document).ready(function() {

  // dynamically load projects for course
  $('#work_course_id').change(function() {
    course_id = $('#work_course_id').val();
    $.ajax({
      // url: '<%= Rails.application.routes.url_helpers.projects_path(format: :js) %>',
      url: '<%= projects_path(format: :js) %>',
      data: {
        course_id: course_id
      },
      beforeSend: function() {
        // add spinner?
        $('#project_description').attr('disabled', 'disabled').attr('placeholder', 'Select or create a project first');
        $('#project_description').val('');
      },
      success: function() {
        init_chosen('#projects-container');
        // do other things
      }
    })
  })

});
</script>
